name: ysmodel # only used for demonstration data api
root_dir: '/scratch/sglee6/opv2v_dataset/train'
validate_dir: '/scratch/sglee6/opv2v_dataset/validate'

train_params:
  batch_size: &batch_size 1
  epoches: &epoches 100
  eval_freq: 1
  save_freq: 1
  max_cav: &max_cav 7
  visible: False

fusion:
  core_method: 'CamIntermediateFusionDataset_per_scenario' # LateFusionDataset, EarlyFusionDataset, IntermediateFusionDataset supported
  args: []

data_augment: []
add_data_extension: ['bev_dynamic.png', 'bev_static.png', 'bev_lane.png', 'bev_visibility.png', 'bev_visibility_corp.png','merged_bev_dynamic.png','merged_bev_static.png','merged_bev_lane.png']
label_generation : false ## true or false
max_padding_cavs : 7
chunk_size : 20

# preprocess-related
preprocess:
  # options: BasePreprocessor, VoxelPreprocessor, BevPreprocessor
  core_method: 'RgbPreprocessor'
  args:
    bgr2rgb: true
    resize_x: &image_width 512
    resize_y: &image_height 512
    mean: [0.485, 0.456, 0.406]
    std: [0.229, 0.224, 0.225]
  # object evaluation rang
  cav_lidar_range: &cav_lidar [-50, -50, -3, 50, 50, 1]

# anchor box related
postprocess:
  core_method: 'CameraBevPostprocessor' # VoxelPostprocessor, BevPostprocessor supported
  anchor_args:
    cav_lidar_range: *cav_lidar
  order: 'hwl' # hwl or lwh
  max_num: 100 # maximum number of objects in a single frame. use this number to make sure different frames has the same dimension in the same batch
  nms_thresh: 0.15

model:
  core_method: ysmodel
  args:
    target: &target 'both' # dynamic, static or both
    max_cav: *max_cav
    encoder:
      xbound : [-50.0, 50.0, 0.5]
      ybound : [-50.0, 50.0, 0.5]
      zbound : [-10.0, 10.0, 20.0]
      dbound : [4.0, 68.0, 1.0]
      depth : [5.0, 45.0, 10.0]
      H : 512
      W : 512
      resize_lim : [0.2, 0.25]
      final_dim : [256, 256]
      bot_pct_lim : [0.0, 0.05]
      rot_lim : [0, 0]
      rand_flip : True
      max_grad_norm : 5.0
      pos_weight : 2.13
      final_bev : [400,400]
      large_bev : [400,400]
      ncams : 4
      cams : ['camera0', 'camera1', 'camera2', 'camera3']
      bev_dim : 64
    
    deconv:
      large_bev_size : 400
      patch_size :  8
      N : 6
      h : 8
      dropout : 0.1 
      d_feed_forward : 1024
      device : 'cuda'
    
    dynamic_output_class : 2
    static_output_class : 3

loss:
  core_method: vanilla_seg_loss
  args:
    target: *target
    d_weights: 75.0
    s_weights: 15.0
    d_coe: 2.0
    s_coe: 2.0
    p_coe : 0.0
    o_coe : 0.02

optimizer:
  core_method: AdamW
  lr: 2e-4
  args:
    eps: 1e-8
    weight_decay: 1e-2

lr_scheduler:
  core_method: cosineannealwarm
  epoches: *epoches
  warmup_epoches: 5
  warmup_lr: 5e-5
  lr_min: 1e-6
